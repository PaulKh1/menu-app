import streamlit as st
import pandas as pd

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(page_title='–ú–µ–Ω—é —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è', layout='wide')

# –¢–µ–º–∞ (—Ç–µ–º–Ω–∞/—Å–≤—ñ—Ç–ª–∞)
theme = st.sidebar.radio('üåó –û–±–µ—Ä–∏ —Ç–µ–º—É:', ['–°–≤—ñ—Ç–ª–∞', '–¢–µ–º–Ω–∞'])
if theme == '–¢–µ–º–Ω–∞':
    st.markdown("""
    <style>
    .stApp {
        background-color: #121212;
        color: #FFFFFF;
    }
    </style>
    """, unsafe_allow_html=True)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é
menu = pd.read_csv('–•–∞—Ä—á—É–≤–∞–Ω–Ω—è.csv')
menu.dropna(inplace=True)

st.markdown("<h2 style='text-align:center;'>üçΩÔ∏è –ú–µ–Ω—é –¥–ª—è –ü–∞–≤–ª–∞ —Ç–∞ –ù–∞—Ç–∞–ª—ñ üìÖ</h2>", unsafe_allow_html=True)

# –í–∏–±—ñ—Ä –¥–Ω—è —Ç–∏–∂–Ω—è
col_day, col_meal = st.columns(2)
with col_day:
    day = st.selectbox('üìÖ –î–µ–Ω—å —Ç–∏–∂–Ω—è:', menu['–î–Ω—ñ'].unique())
with col_meal:
    meal_type = st.radio('ü•ó –ü—Ä–∏–π–æ–º —ó–∂—ñ:', ['–í—Å—ñ'] + list(menu['–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ'].unique()), horizontal=True)

# –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –º–µ–Ω—é
filtered_menu = menu[menu['–î–Ω—ñ'].str.lower() == day.lower()]
if meal_type != '–í—Å—ñ':
    filtered_menu = filtered_menu[filtered_menu['–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ'] == meal_type]

# –§—É–Ω–∫—Ü—ñ—è –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –∫–∞–ª–æ—Ä—ñ–π
def extract_calories(text):
    import re
    matches = re.findall(r'(\d+)\s?–∫–∫–∞–ª', text)
    return sum(map(int, matches)) if matches else 0

filtered_menu['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)'] = filtered_menu['–°—Ç—Ä–∞–≤–∞ (—Ä–µ—Ü–µ–ø—Ç, –∫–∞–ª–æ—Ä—ñ—ó, —Ç–µ—Ö–∫–∞—Ä—Ç–∞)'].apply(extract_calories)
filtered_menu['–ö–∞–ª–æ—Ä—ñ—ó (–ù–∞—Ç–∞–ª—è)'] = (filtered_menu['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)'] * 0.8).astype(int)

# –ö–æ–ª—å–æ—Ä–æ–≤–µ –∫–æ–¥—É–≤–∞–Ω–Ω—è –∫–∞–ª–æ—Ä—ñ–π–Ω–æ—Å—Ç—ñ
def calorie_color(value):
    if value < 200:
        return 'üü¢'
    elif value < 400:
        return 'üü°'
    else:
        return 'üî¥'

# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é –∑ –µ–º–æ–¥–∑—ñ
for idx, row in filtered_menu.iterrows():
    emoji = 'üç≥' if '–°–Ω—ñ–¥–∞–Ω–æ–∫' in row['–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ'] else 'ü•™' if '–ü–µ—Ä–µ–∫—É—Å' in row['–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ'] else 'ü•ò'
    with st.expander(f"{emoji} {row['–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ']}"):
        st.markdown(f"**üìñ –†–µ—Ü–µ–ø—Ç:** {row['–°—Ç—Ä–∞–≤–∞ (—Ä–µ—Ü–µ–ø—Ç, –∫–∞–ª–æ—Ä—ñ—ó, —Ç–µ—Ö–∫–∞—Ä—Ç–∞)']}")
        st.markdown(f"- üçΩÔ∏è **–ü–∞–≤–ª–æ:** {row['–ü–æ—Ä—Ü—ñ—è –¥–ª—è —á–æ–ª–æ–≤—ñ–∫–∞']} ({calorie_color(row['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)'])} {row['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)']} –∫–∫–∞–ª)")
        st.markdown(f"- üçΩÔ∏è **–ù–∞—Ç–∞–ª—è:** {row['–ü–æ—Ä—Ü—ñ—è –¥–ª—è –¥—Ä—É–∂–∏–Ω–∏']} ({calorie_color(row['–ö–∞–ª–æ—Ä—ñ—ó (–ù–∞—Ç–∞–ª—è)'])} {row['–ö–∞–ª–æ—Ä—ñ—ó (–ù–∞—Ç–∞–ª—è)']} –∫–∫–∞–ª)")

# –ì—Ä–∞—Ñ—ñ–∫–∏ –∫–∞–ª–æ—Ä—ñ–π–Ω–æ—Å—Ç—ñ
col1, col2 = st.columns(2)

with col1:
    st.subheader('üìä –ü–∞–≤–ª–æ')
    st.bar_chart(filtered_menu.set_index('–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ')['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)'])

with col2:
    st.subheader('üìä –ù–∞—Ç–∞–ª—è')
    st.bar_chart(filtered_menu.set_index('–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ')['–ö–∞–ª–æ—Ä—ñ—ó (–ù–∞—Ç–∞–ª—è)'])
