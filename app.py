import streamlit as st
import pandas as pd
import sqlite3
import hashlib
import re

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(page_title='–ú–µ–Ω—é —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è', layout='wide')

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
import sqlite3
conn = sqlite3.connect('menu_app.db')
c = conn.cursor()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
c.execute('''CREATE TABLE IF NOT EXISTS users (username TEXT, password TEXT)''')
c.execute('''CREATE TABLE IF NOT EXISTS logs (user TEXT, date TEXT, weight REAL, activity INTEGER)''')
conn.commit()

# –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def create_user(username, password):
    c.execute('INSERT INTO users VALUES (?, ?)', (username, password))
    conn.commit()

def login(username, password):
    c.execute('SELECT * FROM users WHERE username=? AND password=?', (username, password))
    return c.fetchone()

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
st.sidebar.header('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è')
username = st.sidebar.text_input('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
password = st.sidebar.text_input('–ü–∞—Ä–æ–ª—å', type='password')

if st.sidebar.button('–£–≤—ñ–π—Ç–∏'):
    user = login(username, password)
    if user:
        st.sidebar.success(f'–í—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π: {username}')
        st.session_state['user'] = username
    else:
        st.sidebar.error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å')

if 'user' in st.session_state:
    # –í–∏–±—ñ—Ä —Ç–µ–º–∏
    theme = st.sidebar.radio('üåó –û–±–µ—Ä–∏ —Ç–µ–º—É:', ['–°–≤—ñ—Ç–ª–∞', '–¢–µ–º–Ω–∞'])

    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é
    menu = pd.read_csv('–•–∞—Ä—á—É–≤–∞–Ω–Ω—è.csv', encoding='utf-8-sig').dropna()

    st.title('üçΩÔ∏è –ú–µ–Ω—é –¥–ª—è –ü–∞–≤–ª–∞ —Ç–∞ –ù–∞—Ç–∞–ª—ñ üìÖ')

    # –í–∏–±—ñ—Ä –¥–Ω—è —Ç–∏–∂–Ω—è
    selected_day = st.selectbox('üìÖ –î–µ–Ω—å —Ç–∏–∂–Ω—è:', menu['–î–Ω—ñ'].unique())

    # –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –º–µ–Ω—é
    filtered_menu = menu[menu['–î–Ω—ñ'].str.lower() == selected_day.lower()]

    # –í–∏—Ç—è–≥ –∫–∞–ª–æ—Ä—ñ–π
    def extract_calories(text):
        matches = re.findall(r'(\d+)\s?–∫–∫–∞–ª', text)
        return sum(map(int, matches)) if matches else 0

    filtered_menu['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)'] = filtered_menu['–°—Ç—Ä–∞–≤–∞ (—Ä–µ—Ü–µ–ø—Ç, –∫–∞–ª–æ—Ä—ñ—ó, —Ç–µ—Ö–∫–∞—Ä—Ç–∞)'].apply(extract_calories)
    filtered_menu['–ö–∞–ª–æ—Ä—ñ—ó (–ù–∞—Ç–∞–ª—è)'] = (filtered_menu['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)'] * 0.8).astype(int)

    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é
    for _, row in filtered_menu.iterrows():
        with st.expander(f"‚è∞ {row['–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ']}"):
            st.write(f"**üìñ –†–µ—Ü–µ–ø—Ç:** {row['–°—Ç—Ä–∞–≤–∞ (—Ä–µ—Ü–µ–ø—Ç, –∫–∞–ª–æ—Ä—ñ—ó, —Ç–µ—Ö–∫–∞—Ä—Ç–∞)']}")
            st.write(f"üçΩÔ∏è **–ü–∞–≤–ª–æ:** {row['–ü–æ—Ä—Ü—ñ—è –¥–ª—è —á–æ–ª–æ–≤—ñ–∫–∞']} ({row['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)']} –∫–∫–∞–ª)")
            st.write(f"üçΩÔ∏è **–ù–∞—Ç–∞–ª—è:** {row['–ü–æ—Ä—Ü—ñ—è –¥–ª—è –¥—Ä—É–∂–∏–Ω–∏']} ({row['–ö–∞–ª–æ—Ä—ñ—ó (–ù–∞—Ç–∞–ª—è)']} –∫–∫–∞–ª)")

    # –ì—Ä–∞—Ñ—ñ–∫–∏ –∫–∞–ª–æ—Ä—ñ–π–Ω–æ—Å—Ç—ñ
    col1, col2 = st.columns(2)
    with col1:
        st.subheader('üìä –ü–∞–≤–ª–æ')
        st.bar_chart(filtered_menu.set_index('–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ')['–ö–∞–ª–æ—Ä—ñ—ó (–ü–∞–≤–ª–æ)'])

    with col2:
        st.subheader('üìä –ù–∞—Ç–∞–ª—è')
        st.bar_chart(filtered_menu.set_index('–ß–∞—Å –ø—Ä–∏–π–æ–º—É —ó–∂—ñ')['–ö–∞–ª–æ—Ä—ñ—ó (–ù–∞—Ç–∞–ª—è)'])

    # –ñ—É—Ä–Ω–∞–ª –≤–∞–≥–∏ —Ç–∞ —Ñ—ñ–∑–∏—á–Ω–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
    st.header('üìù –ñ—É—Ä–Ω–∞–ª –≤–∞–≥–∏ —Ç–∞ —Ñ—ñ–∑–∏—á–Ω–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ')

    date = st.date_input('üìÖ –î–∞—Ç–∞ –∑–∞–ø–∏—Å—É:')
    weight_log = st.number_input('‚öñÔ∏è –í–∞–≥–∞ (–∫–≥):', 30.0, 200.0, step=0.1)
    activity_log = st.slider('üèÉ‚Äç‚ôÇÔ∏è –§—ñ–∑–∏—á–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (—Ö–≤/–¥–µ–Ω—å):', 0, 180, step=10)

    if st.button('‚ûï –î–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å'):
        c.execute('INSERT INTO activity_logs (user, date, weight, activity) VALUES (?, ?, ?, ?)', (st.session_state['user'], date, weight_log, activity_log))
        conn.commit()
        st.success('‚úÖ –ó–∞–ø–∏—Å –¥–æ–¥–∞–Ω–æ!')

    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    logs_df = pd.read_sql(f"SELECT date, weight, activity FROM logs WHERE user='{st.session_state['user']}'", conn)
    if not logs.empty:
        st.dataframe(logs)
        st.line_chart(log_df.set_index('–î–∞—Ç–∞')['–í–∞–≥–∞'])
        st.bar_chart(log_df.set_index('–î–∞—Ç–∞')['–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å'])
else:
    st.info('–ë—É–¥—å –ª–∞—Å–∫–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –±–æ–∫–æ–≤—É –ø–∞–Ω–µ–ª—å.')
